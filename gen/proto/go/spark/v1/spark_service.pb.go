// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: spark/v1/spark_service.proto

package sparkv1

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_spark_v1_spark_service_proto protoreflect.FileDescriptor

var file_spark_v1_spark_service_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x61, 0x72, 0x6b,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x73, 0x70, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2f,
	0x76, 0x31, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6a, 0x6f, 0x62,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2f, 0x76, 0x31,
	0x2f, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x6c, 0x6f, 0x67,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x73, 0x70, 0x61, 0x72,
	0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x6a, 0x6f, 0x62, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x73, 0x70, 0x61, 0x72, 0x6b,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x70, 0x63, 0x5f, 0x70, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65,
	0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x32, 0x9f, 0x06, 0x0a, 0x0c, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x99, 0x01, 0x0a, 0x08, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x19,
	0x2e, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4a,
	0x6f, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x70, 0x61, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x65, 0x75, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x56, 0x92, 0x41, 0x3b, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x72,
	0x6b, 0x12, 0x0b, 0x51, 0x75, 0x65, 0x75, 0x65, 0x20, 0x61, 0x20, 0x6a, 0x6f, 0x62, 0x1a, 0x0b,
	0x51, 0x75, 0x65, 0x75, 0x65, 0x20, 0x61, 0x20, 0x6a, 0x6f, 0x62, 0x4a, 0x18, 0x0a, 0x03, 0x32,
	0x30, 0x30, 0x12, 0x11, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x06, 0x0a,
	0x04, 0x9a, 0x02, 0x01, 0x07, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x22, 0x0d,
	0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6a, 0x6f, 0x62, 0x12, 0xaa, 0x01,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x1b, 0x2e, 0x73,
	0x70, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4c, 0x6f,
	0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x70, 0x61, 0x72,
	0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x92, 0x41, 0x43, 0x0a, 0x05, 0x53, 0x70,
	0x61, 0x72, 0x6b, 0x12, 0x0f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x6a, 0x6f, 0x62, 0x20,
	0x6c, 0x6f, 0x67, 0x73, 0x1a, 0x0f, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x20, 0x6a, 0x6f, 0x62,
	0x20, 0x6c, 0x6f, 0x67, 0x73, 0x4a, 0x18, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x11, 0x0a, 0x07,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x06, 0x0a, 0x04, 0x9a, 0x02, 0x01, 0x07, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x15, 0x3a, 0x01, 0x2a, 0x22, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65,
	0x74, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x12, 0xb0, 0x01, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x2e, 0x73, 0x70,
	0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x70, 0x61,
	0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x61, 0x92, 0x41, 0x41, 0x0a,
	0x05, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x12, 0x0e, 0x47, 0x65, 0x74, 0x20, 0x6a, 0x6f, 0x62, 0x20,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x0e, 0x47, 0x65, 0x74, 0x20, 0x6a, 0x6f, 0x62, 0x20,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4a, 0x18, 0x0a, 0x03, 0x32, 0x30, 0x30, 0x12, 0x11, 0x0a,
	0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x06, 0x0a, 0x04, 0x9a, 0x02, 0x01, 0x07,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x3a, 0x01, 0x2a, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x67,
	0x65, 0x74, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x9f, 0x01,
	0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x12, 0x1a, 0x2e, 0x73, 0x70,
	0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4a, 0x6f, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x59, 0x92, 0x41, 0x3d, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x72, 0x6b,
	0x12, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x61, 0x20, 0x6a, 0x6f, 0x62, 0x1a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x61, 0x20, 0x6a, 0x6f, 0x62, 0x4a, 0x18, 0x0a, 0x03,
	0x32, 0x30, 0x30, 0x12, 0x11, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x06,
	0x0a, 0x04, 0x9a, 0x02, 0x01, 0x07, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x3a, 0x01, 0x2a, 0x22,
	0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6a, 0x6f, 0x62, 0x12,
	0x71, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x2e, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x92, 0x41, 0x27, 0x0a, 0x03, 0x4f, 0x70, 0x73,
	0x12, 0x0f, 0x50, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x1a, 0x0f, 0x50, 0x69, 0x6e, 0x67, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69,
	0x6e, 0x67, 0x42, 0x88, 0x01, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e, 0x73, 0x70, 0x61, 0x72, 0x6b,
	0x2e, 0x76, 0x31, 0x42, 0x11, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x10, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x2f,
	0x76, 0x31, 0x3b, 0x73, 0x70, 0x61, 0x72, 0x6b, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x53, 0x58, 0x58,
	0xaa, 0x02, 0x08, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x08, 0x53, 0x70,
	0x61, 0x72, 0x6b, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x14, 0x53, 0x70, 0x61, 0x72, 0x6b, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x09,
	0x53, 0x70, 0x61, 0x72, 0x6b, 0x3a, 0x3a, 0x56, 0x31, 0x92, 0x41, 0x11, 0x12, 0x0f, 0x0a, 0x09,
	0x53, 0x70, 0x61, 0x72, 0x6b, 0x20, 0x41, 0x50, 0x49, 0x32, 0x02, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_spark_v1_spark_service_proto_goTypes = []interface{}{
	(*QueueJobRequest)(nil),      // 0: spark.v1.QueueJobRequest
	(*GetJobLogsRequest)(nil),    // 1: spark.v1.GetJobLogsRequest
	(*GetJobStatusRequest)(nil),  // 2: spark.v1.GetJobStatusRequest
	(*DeleteJobRequest)(nil),     // 3: spark.v1.DeleteJobRequest
	(*PingRequest)(nil),          // 4: spark.v1.PingRequest
	(*QueueJobResponse)(nil),     // 5: spark.v1.QueueJobResponse
	(*GetJobLogsResponse)(nil),   // 6: spark.v1.GetJobLogsResponse
	(*GetJobStatusResponse)(nil), // 7: spark.v1.GetJobStatusResponse
	(*DeleteJobResponse)(nil),    // 8: spark.v1.DeleteJobResponse
	(*PingResponse)(nil),         // 9: spark.v1.PingResponse
}
var file_spark_v1_spark_service_proto_depIdxs = []int32{
	0, // 0: spark.v1.SparkService.QueueJob:input_type -> spark.v1.QueueJobRequest
	1, // 1: spark.v1.SparkService.GetJobLogs:input_type -> spark.v1.GetJobLogsRequest
	2, // 2: spark.v1.SparkService.GetJobStatus:input_type -> spark.v1.GetJobStatusRequest
	3, // 3: spark.v1.SparkService.DeleteJob:input_type -> spark.v1.DeleteJobRequest
	4, // 4: spark.v1.SparkService.Ping:input_type -> spark.v1.PingRequest
	5, // 5: spark.v1.SparkService.QueueJob:output_type -> spark.v1.QueueJobResponse
	6, // 6: spark.v1.SparkService.GetJobLogs:output_type -> spark.v1.GetJobLogsResponse
	7, // 7: spark.v1.SparkService.GetJobStatus:output_type -> spark.v1.GetJobStatusResponse
	8, // 8: spark.v1.SparkService.DeleteJob:output_type -> spark.v1.DeleteJobResponse
	9, // 9: spark.v1.SparkService.Ping:output_type -> spark.v1.PingResponse
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_spark_v1_spark_service_proto_init() }
func file_spark_v1_spark_service_proto_init() {
	if File_spark_v1_spark_service_proto != nil {
		return
	}
	file_spark_v1_rpc_queue_job_proto_init()
	file_spark_v1_rpc_get_job_logs_proto_init()
	file_spark_v1_rpc_get_job_status_proto_init()
	file_spark_v1_rpc_delete_job_proto_init()
	file_spark_v1_rpc_ping_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spark_v1_spark_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spark_v1_spark_service_proto_goTypes,
		DependencyIndexes: file_spark_v1_spark_service_proto_depIdxs,
	}.Build()
	File_spark_v1_spark_service_proto = out.File
	file_spark_v1_spark_service_proto_rawDesc = nil
	file_spark_v1_spark_service_proto_goTypes = nil
	file_spark_v1_spark_service_proto_depIdxs = nil
}
